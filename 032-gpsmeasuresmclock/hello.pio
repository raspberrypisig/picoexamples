.program countedges
; X=2^32-1
    MOV X ~NULL
    WAIT 1 IRQ 7
loop:
    JMP PIN done
    JMP X-- loop
done:
    MOV ISR ~X
    PUSH
    IRQ SET 6
end:
    JMP end

% c-sdk {
static inline void countedges_program_init(PIO pio, uint sm, uint offset, uint jmp_pin) {
    pio_sm_config c = countedges_program_get_default_config(offset);

    sm_config_set_jmp_pin(&c, jmp_pin);
    
    
    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    // Set the state machine running
    //pio_sm_set_enabled(pio, sm, true);
}
%}

.program gate
    WAIT 0 PIN 0
    WAIT 1 PIN 0
    IRQ SET 7
    WAIT 0 PIN 0
    WAIT 1 PIN 0
    SET PINS 1
    WAIT 1 IRQ 6
    SET PINS 0
end:
    JMP end

% c-sdk {
static inline void gate_program_init(PIO pio, uint sm, uint offset, uint in_pin, uint set_pin) {
    pio_gpio_init(pio, set_pin);
    pio_sm_set_consecutive_pindirs(pio, sm, set_pin, 1, true);
    pio_sm_config c = gate_program_get_default_config(offset);
    sm_config_set_in_pins(&c, in_pin);
    sm_config_set_set_pins(&c, set_pin, 1);
    pio_sm_init(pio, sm, offset, &c);
}
%}

