
.program countedges

; need to jumper gpio 14 and 15
; gpio 4 : out pin used by state machine
; gpio 14 : jmp pin used by state machine 0 
; gpio 15 : set pin used by state machine 1

; start countedges program
      MOV X ~NULL
loop:
      WAIT 0 PIN 0
      WAIT 1 PIN 0
      JMP PIN done
      JMP X-- next
done:
      MOV ISR ~X
      PUSH
.wrap_target:
      NOP
.wrap
; end countedges program

% c-sdk {
static inline void countedges_program_init(PIO pio, uint sm, uint offset, uint in_pin, uint jmp_pin) {
    pio_sm_config c = countedges_program_get_default_config(offset);
    sm_config_set_out_shift(&c, true, true, 32);
    sm_config_set_in_pins(&c, in_pin, 1);
    sm_config_set_jmp_pins(&c, jmp_pin ,1);
    //pio_gpio_init(pio, pin);  
}
%}
 
.program referencetimer
      MOV X OSR
      WAIT 0 PIN 0
      WAIT 0 PIN 1
loop:
      JMP X-- loop
      SET PINS 0
      MOV X ~NULL
      JMP next
isOne:
      JMP X-- next
next:
      JMP PIN isOne

.wrap_target:
      JMP X-- isDone
isDone:
      JMP PIN done
.wrap
      
done:
      IN X 32
      PUSH
end:
      JMP end
      
      
% c-sdk {
static inline void referencetimer_program_init(PIO pio, uint sm, uint offset, uint in_pin, uint set_pin) {
    pio_sm_config c = referencetimer_program_get_default_config(offset);
    pio_sm_set_consecutive_pindirs(pio, sm, set_pin, 1, true);
    sm_config_set_in_pins(&c, in_pin, 1);
    sm_config_set_set_pins(&c, set_pin, 1);
}
%}
      

