// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------- //
// countedges //
// ---------- //

#define countedges_wrap_target 0
#define countedges_wrap 3

static const uint16_t countedges_program_instructions[] = {
            //     .wrap_target
    0xa02b, //  0: mov    x, !null                   
    0x2020, //  1: wait   0 pin, 0                   
    0x20a0, //  2: wait   1 pin, 0                   
    0x0041, //  3: jmp    x--, 1                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program countedges_program = {
    .instructions = countedges_program_instructions,
    .length = 4,
    .origin = -1,
};

static inline pio_sm_config countedges_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + countedges_wrap_target, offset + countedges_wrap);
    return c;
}

static inline void countedges_program_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_config c = countedges_program_get_default_config(offset);
    sm_config_set_in_pins(&c, pin);
    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}

#endif

